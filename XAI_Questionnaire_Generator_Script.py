#!/usr/bin/env python
# coding: utf-8

# Libraries Import
from functions import *


print('XAI Questionnaire Generator\n')
print('The following python script has been created with the aim of generating a template of a questionnaire suitable for making evaluation in the XAI field.\n')
print("In order to generate a template suited for the user's needs, the the following script requires you to answer two questions. After the answering of the questions, the program will save the template in a file with the .ipynb extension that contains, in addition to the survey template, all the information necessary to complete it with user information.")

print("---------------------------------")

print('Question 1\n')

print('Qualitative Evaluation')
print("A qualitative evaluation consists of open-ended questions. The questions' answers are more complex to analyse than quatitative evaluation, but it allows to do deeper analysis on the answers.\n")

print('Quantitative Evaluation')
print("A quantitative evaluation consists on close-ended questions. The following evaluation allows to do statistical analysis easier than qualitative evaluation.\n")

print('Considering the following definitions, what type of evaluation you would like to do in your questionnaire? Type 1 for Qualitative Evaluation or 2 otherwise.')

invalid_input = True
evaluation_type = str

while invalid_input:
    evaluation_type = input('Choice: ')

    if evaluation_type == '1' or evaluation_type == '2':
        invalid_input = False
    else:
        print('Invalid input! Please insert only values 1 or 2.')

print("---------------------------------")  
print('Question 2\n')
print('The evaluation that we normally would like to make when carrying out a questionnaire in the XAI field, is to evaluate whether the explanation generated by our XAI system satisfies one or more of the following goals.\n')
print("* Trasparency: How the system works\n* Scrutability: Identification of a wrongly system\n* Trust:Increase of user's confidence in the system\n* Persuasiveness: Convince the user to perform a action\n* Satisfaction: Increase the ease of use or enjoyment")
print("* Effectiveness: Helping the user to make good decisions\n* Efficiency: Help the user to make decisions faster\n* Education: Allow the user to generalize and learn\n* Debugging: Helping the user to make good decisions\n")

print('To test the hypothesis, it is necessary to use a methodology. Four different methodologies can be used for this purpose, and each differs in the evaluation method and information provided to the user.\n')
print('* Verification Task: The verification task methodology requires an input, output, and explanation. The goal is to ask the user its satisfaction with the given explanation with respect to the input and output.')
print('* Forced Choice: The forced choice methodology requires an input, output, and several explanations. The goal is to ask the user to choose among the explanations provided the one it preferers with respect to the input and output.')
print("* Forward Simulation: The forward simulation methodology requires an input and an explanation. The goal is to ask the user to predict the system's output given the input and the explanation of the system's output.")
print('* CounterFactual Simulation Task: The counterfactual simulation task methodology requires two samples and the following information of the two: the input, output, and explanation of the first sample and the output of the second one. The goal is to ask the user the input changes to get the output of the sample 2.\n')
print('Considering the provided information, which methodology would you like to use to test the explanation goal/goals you fixed? Type 1 for Verification Task, 2 for Forced Choice, 3 for Forward Simulation, 4 for CounterFactual Simulation Task.')

invalid_input = True
explanation_assessment_quality = str

while invalid_input:
    explanation_assessment_quality = input('Choice: ')

    if explanation_assessment_quality == '1' or explanation_assessment_quality == '2' or explanation_assessment_quality == '3' or explanation_assessment_quality == '4':
        invalid_input = False
    else:
        print('Invalid input! Please insert only values 1, 2, 3 or 4.')

print("---------------------------------")  
print('Question 3\n')
print('How many questions would you like to have in your questionnaire? The maximum selection is bonded to 5 not to have a too long questionnaire.')

invalid_input = True
questions_number = str

while invalid_input:
    questions_number = input('Choice: ')

    if questions_number == '1' or questions_number == '2' or questions_number == '3' or questions_number == '4' or questions_number == '5':
        invalid_input = False
    else:
        print('Invalid input! Please insert only values 1, 2, 3, 4 or 5.')

templateGenerator(evaluation_type, explanation_assessment_quality, questions_number)
print('\nTemplate Generated!')




